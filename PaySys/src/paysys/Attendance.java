package paysys;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Seirrah
 */
public final class Attendance extends javax.swing.JFrame {
    private Connection Connect;
    private PreparedStatement Text;
    /**
     * Creates new form EmployeeAttendance
     * @throws java.sql.SQLException
     */
    public Attendance() throws SQLException {
        initComponents();
        DatabaseConnection();
        ShowAttendanceTable();
        
        // Populate the JComboBox with months
        String[] months = {"January", "February", "March", "April", "May", "June",
                           "July", "August", "September", "October", "November", "December"};
        MonthlyAttendance.setModel(new JComboBox<>(months).getModel());
    }
    
    public void DatabaseConnection(){
        try {
            Connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/payrollsystem_db", "root" , "092403");
        } catch (SQLException ex) {
            Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void ShowAttendanceTable() throws SQLException{
        int CountColumns;
        
        try{
            Text = Connect.prepareStatement("SELECT * FROM attendance ORDER BY Date");
            ResultSet TableResult = Text.executeQuery();
            
            ResultSetMetaData RSMD = TableResult.getMetaData();
            CountColumns = RSMD.getColumnCount();
            DefaultTableModel DefaultTable = (DefaultTableModel) AttendanceTable.getModel();
            DefaultTable.setRowCount(0);
            
             while (TableResult.next()) {
                Vector<String> VectorValue = new Vector<>();
                
                for (int ii = 2; ii <= CountColumns; ii++) {
                    VectorValue.add(TableResult.getString(ii));
                }
                DefaultTable.addRow(VectorValue);
            }  
        }
            catch(SQLException e){
                Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
     private int GetMonthIndex(String monthName) {
        return switch (monthName) {
            case "January" -> 1;
            case "February" -> 2;
            case "March" -> 3;
            case "April" -> 4;
            case "May" -> 5;
            case "June" -> 6;
            case "July" -> 7;
            case "August" -> 8;
            case "September" -> 9;
            case "October" -> 10;
            case "November" -> 11;
            case "December" -> 12;
            default -> 0;
        }; // Invalid month name (should not happen with correct ComboBox setup)
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // </editor-fold>
@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Default = new javax.swing.JPanel();
        MonthlyAttendance = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        AttendanceTable = new javax.swing.JTable();
        AllAttendance = new javax.swing.JButton();
        Name = new javax.swing.JLabel();
        Overview = new javax.swing.JLabel();
        Home = new javax.swing.JLabel();
        Management = new javax.swing.JLabel();
        Profile = new javax.swing.JLabel();
        Employee = new javax.swing.JLabel();
        Attendance = new javax.swing.JLabel();
        Time = new javax.swing.JLabel();
        Record = new javax.swing.JLabel();
        Leave = new javax.swing.JLabel();
        Overtime = new javax.swing.JLabel();
        Request = new javax.swing.JLabel();
        Payslip = new javax.swing.JLabel();
        Generate = new javax.swing.JLabel();
        Salary = new javax.swing.JLabel();
        Exit = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        EmployeeNumber = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Default.setBackground(new java.awt.Color(255, 255, 255));
        Default.setPreferredSize(new java.awt.Dimension(989, 600));

        MonthlyAttendance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        MonthlyAttendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthlyAttendanceActionPerformed(evt);
            }
        });

        AttendanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "Date", "Time In", "Time Out", "Overtime Hours", "Hours Worked"
            }
        ));
        jScrollPane1.setViewportView(AttendanceTable);

        AllAttendance.setText("Show All");
        AllAttendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllAttendanceActionPerformed(evt);
            }
        });

        Name.setBackground(new java.awt.Color(104, 107, 122));
        Name.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Name.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/profile.png"))); // NOI18N
        Name.setText("Taylor Christian Tayengco");

        Overview.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Overview.setText("Overview");

        Home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/house-window.png"))); // NOI18N
        Home.setText("Home");

        Management.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Management.setText("Management");

        Profile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/user.png"))); // NOI18N
        Profile.setText("Profile");

        Employee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/users.png"))); // NOI18N
        Employee.setText("Employee");

        Attendance.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Attendance.setText("Attendance");

        Time.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/clock-three.png"))); // NOI18N
        Time.setText("Time In/Out");

        Record.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/calendar-lines.png"))); // NOI18N
        Record.setText("Record");

        Leave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/calendar-day.png"))); // NOI18N
        Leave.setText("Leave");

        Overtime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/calendar-clock.png"))); // NOI18N
        Overtime.setText("Overtime");

        Request.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/calendar-pen.png"))); // NOI18N
        Request.setText("Request");

        Payslip.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Payslip.setText("Payslip");

        Generate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/wallet-arrow.png"))); // NOI18N
        Generate.setText("Generate");

        Salary.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/credit-card-buyer.png"))); // NOI18N
        Salary.setText("Payslip");

        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Collaterals/exit.png"))); // NOI18N
        Exit.setText("Sign Out");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Employee Attendance Record");

        EmployeeNumber.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        EmployeeNumber.setText("Employee Number: 0000");

        javax.swing.GroupLayout DefaultLayout = new javax.swing.GroupLayout(Default);
        Default.setLayout(DefaultLayout);
        DefaultLayout.setHorizontalGroup(
            DefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DefaultLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(DefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DefaultLayout.createSequentialGroup()
                        .addGroup(DefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Home)
                            .addComponent(Management)
                            .addComponent(Profile)
                            .addComponent(Employee)
                            .addComponent(Request)
                            .addComponent(Salary)
                            .addComponent(Attendance)
                            .addComponent(Time)
                            .addComponent(Record)
                            .addComponent(Leave)
                            .addComponent(Overtime)
                            .addComponent(Payslip)
                            .addComponent(Generate)
                            .addComponent(Exit))
                        .addGap(75, 75, 75)
                        .addGroup(DefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(DefaultLayout.createSequentialGroup()
                                .addComponent(EmployeeNumber)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(MonthlyAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98)
                                .addComponent(AllAttendance))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(DefaultLayout.createSequentialGroup()
                        .addGroup(DefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Name)
                            .addComponent(Overview))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addGap(16, 16, 16))
        );
        DefaultLayout.setVerticalGroup(
            DefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DefaultLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(DefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name)
                    .addComponent(jLabel1))
                .addGap(12, 12, 12)
                .addGroup(DefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DefaultLayout.createSequentialGroup()
                        .addComponent(Overview)
                        .addGap(12, 12, 12)
                        .addComponent(Home)
                        .addGap(18, 18, 18)
                        .addComponent(Management)
                        .addGap(12, 12, 12)
                        .addComponent(Profile)
                        .addGap(12, 12, 12)
                        .addComponent(Employee)
                        .addGap(12, 12, 12)
                        .addComponent(Request)
                        .addGap(12, 12, 12)
                        .addComponent(Salary)
                        .addGap(18, 18, 18)
                        .addComponent(Attendance)
                        .addGap(12, 12, 12)
                        .addComponent(Time)
                        .addGap(12, 12, 12)
                        .addComponent(Record)
                        .addGap(12, 12, 12)
                        .addComponent(Leave)
                        .addGap(12, 12, 12)
                        .addComponent(Overtime)
                        .addGap(18, 18, 18)
                        .addComponent(Payslip)
                        .addGap(12, 12, 12)
                        .addComponent(Generate)
                        .addGap(12, 12, 12)
                        .addComponent(Exit))
                    .addGroup(DefaultLayout.createSequentialGroup()
                        .addGroup(DefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(EmployeeNumber)
                            .addGroup(DefaultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(MonthlyAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(AllAttendance)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Default, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Default, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MonthlyAttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthlyAttendanceActionPerformed
    String SelectedMonth = (String) MonthlyAttendance.getSelectedItem();
    
        if (SelectedMonth != null) {
            // Convert month name to month number (1-based index)
            int MonthIndex = GetMonthIndex(SelectedMonth);

            try {
                // Log the selected month and its corresponding index
                System.out.println("Selected Month: " + SelectedMonth + ", Month Index: " + MonthIndex);

                // Prepare and execute the SQL query
                Text = Connect.prepareStatement("SELECT * FROM attendance WHERE MONTH(Date) = ?");
                Text.setInt(1, MonthIndex);
                ResultSet TableResult = Text.executeQuery();

                // Clear the existing rows in the table model
                DefaultTableModel DefaultTable = (DefaultTableModel) AttendanceTable.getModel();
                DefaultTable.setRowCount(0);

                // Iterate through the result set and populate the table model
                while (TableResult.next()) {
                    Vector<String> VectorValue = new Vector<>();
                    VectorValue.add(TableResult.getString("EmployeeID"));
                    VectorValue.add(TableResult.getString("Date"));
                    VectorValue.add(TableResult.getString("TimeInDate"));
                    VectorValue.add(TableResult.getString("TimeOutDate"));
                    VectorValue.add(TableResult.getString("OvertimeHours"));
                    VectorValue.add(TableResult.getString("HoursWorked"));

                    DefaultTable.addRow(VectorValue);
                }
            } catch (SQLException e) {
                // Log any SQL exceptions for debugging purposes
                Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, e);
                System.out.println("SQL Exception: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_MonthlyAttendanceActionPerformed

    private void AllAttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllAttendanceActionPerformed
        try {
            // Clear the combo box selection if it's set
            MonthlyAttendance.setSelectedIndex(-1); // -1 means no selection

            // Prepare the SQL query to retrieve all records
            String query = "SELECT * FROM attendance ORDER BY Date";
            Text = Connect.prepareStatement(query);
            ResultSet TableResult = Text.executeQuery();

            // Clear the existing rows in the table model
            DefaultTableModel DefaultTable = (DefaultTableModel) AttendanceTable.getModel();
            DefaultTable.setRowCount(0);

            // Iterate through the result set and populate the table model
            while (TableResult.next()) {
                Vector<String> VectorValue = new Vector<>();
                VectorValue.add(TableResult.getString("EmployeeID"));
                VectorValue.add(TableResult.getString("Date"));
                VectorValue.add(TableResult.getString("TimeInDate"));
                VectorValue.add(TableResult.getString("TimeOutDate"));
                VectorValue.add(TableResult.getString("OvertimeHours"));
                VectorValue.add(TableResult.getString("HoursWorked"));

                DefaultTable.addRow(VectorValue);
            }

            // Refresh the table UI to reflect changes
            AttendanceTable.revalidate();
            AttendanceTable.repaint();

        } catch (SQLException e) {
            // Log any SQL exceptions for debugging purposes
            Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, e);
            System.out.println("SQL Exception: " + e.getMessage());
        }
    }//GEN-LAST:event_AllAttendanceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Attendance().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AllAttendance;
    private javax.swing.JLabel Attendance;
    private javax.swing.JTable AttendanceTable;
    private javax.swing.JPanel Default;
    private javax.swing.JLabel Employee;
    private javax.swing.JLabel EmployeeNumber;
    private javax.swing.JLabel Exit;
    private javax.swing.JLabel Generate;
    private javax.swing.JLabel Home;
    private javax.swing.JLabel Leave;
    private javax.swing.JLabel Management;
    private javax.swing.JComboBox<String> MonthlyAttendance;
    private javax.swing.JLabel Name;
    private javax.swing.JLabel Overtime;
    private javax.swing.JLabel Overview;
    private javax.swing.JLabel Payslip;
    private javax.swing.JLabel Profile;
    private javax.swing.JLabel Record;
    private javax.swing.JLabel Request;
    private javax.swing.JLabel Salary;
    private javax.swing.JLabel Time;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}